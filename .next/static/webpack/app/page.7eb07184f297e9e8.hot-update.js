"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./hooks/useShoppingList.ts":
/*!**********************************!*\
  !*** ./hooks/useShoppingList.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ useShoppingList)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_search__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/search */ \"(app-pages-browser)/./lib/search.ts\");\n\n\n// **FIX:** Separated 'Produce' into 'Fruits' and 'Vegetables'\nconst categories = {\n    // Fruits\n    apple: \"Fruits\",\n    banana: \"Fruits\",\n    orange: \"Fruits\",\n    grapes: \"Fruits\",\n    mango: \"Fruits\",\n    watermelon: \"Fruits\",\n    strawberries: \"Fruits\",\n    cherries: \"Fruits\",\n    pineapple: \"Fruits\",\n    // Vegetables\n    potato: \"Vegetables\",\n    onion: \"Vegetables\",\n    tomato: \"Vegetables\",\n    carrot: \"Vegetables\",\n    spinach: \"Vegetables\",\n    broccoli: \"Vegetables\",\n    cucumber: \"Vegetables\",\n    // Dairy & Alternatives\n    milk: \"Dairy\",\n    cheese: \"Dairy\",\n    butter: \"Dairy\",\n    yogurt: \"Dairy\",\n    // Snacks\n    chips: \"Snacks\",\n    cookies: \"Snacks\",\n    nuts: \"Snacks\",\n    // Bakery\n    bread: \"Bakery\",\n    cake: \"Bakery\",\n    muffins: \"Bakery\",\n    // Grains & Pantry\n    rice: \"Grains\",\n    pasta: \"Grains\",\n    flour: \"Grains\",\n    sugar: \"Pantry\",\n    salt: \"Pantry\",\n    oil: \"Pantry\",\n    ketchup: \"Pantry\",\n    honey: \"Pantry\",\n    // Household & Personal Care\n    soap: \"Household\",\n    toothpaste: \"Personal Care\",\n    shampoo: \"Personal Care\"\n};\nconst numberWords = {\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n    ten: 10\n};\nfunction parseItem(command) {\n    const cleanedCommand = command.toLowerCase().trim();\n    const words = cleanedCommand.split(' ');\n    const firstWord = words[0];\n    if (numberWords[firstWord]) {\n        return {\n            quantity: numberWords[firstWord],\n            name: words.slice(1).join(' ')\n        };\n    }\n    const digitMatch = cleanedCommand.match(/^(\\d+)\\s*(.*)/);\n    if (digitMatch) {\n        return {\n            quantity: parseInt(digitMatch[1], 10),\n            name: digitMatch[2].trim()\n        };\n    }\n    return {\n        quantity: 1,\n        name: cleanedCommand\n    };\n}\nfunction useShoppingList() {\n    const [items, setItems] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useShoppingList.useEffect\": ()=>{\n            try {\n                const savedItemsJSON = localStorage.getItem(\"shoppingItems\");\n                if (savedItemsJSON) {\n                    const savedItems = JSON.parse(savedItemsJSON);\n                    const migratedItems = savedItems.map({\n                        \"useShoppingList.useEffect.migratedItems\": (item)=>{\n                            if (typeof item.price !== 'number') {\n                                console.log(\"Migrating old item: \".concat(item.name));\n                                return {\n                                    ...item,\n                                    price: (0,_lib_search__WEBPACK_IMPORTED_MODULE_1__.getItemPrice)(item.name)\n                                };\n                            }\n                            return item;\n                        }\n                    }[\"useShoppingList.useEffect.migratedItems\"]);\n                    setItems(migratedItems);\n                }\n            } catch (error) {\n                console.error(\"Failed to parse/migrate shopping items from localStorage:\", error);\n                localStorage.removeItem(\"shoppingItems\");\n            }\n        }\n    }[\"useShoppingList.useEffect\"], []);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useShoppingList.useEffect\": ()=>{\n            localStorage.setItem(\"shoppingItems\", JSON.stringify(items));\n        }\n    }[\"useShoppingList.useEffect\"], [\n        items\n    ]);\n    const addItem = (command)=>{\n        const { quantity, name } = parseItem(command);\n        if (!name) return;\n        const existingItem = items.find((i)=>i.name.toLowerCase() === name.toLowerCase());\n        if (existingItem) {\n            increaseQuantity(existingItem.id, quantity);\n        } else {\n            const categoryKey = Object.keys(categories).find((key)=>name.includes(key)) || \"other\";\n            const price = (0,_lib_search__WEBPACK_IMPORTED_MODULE_1__.getItemPrice)(name);\n            const newItem = {\n                id: Date.now().toString(),\n                name,\n                quantity,\n                category: categories[categoryKey] || \"Other\",\n                price,\n                addedAt: new Date(),\n                completed: false\n            };\n            setItems((prev)=>[\n                    ...prev,\n                    newItem\n                ]);\n        }\n    };\n    const removeItemByName = (name)=>{\n        if (!name) return false;\n        const itemExists = items.some((i)=>i.name.toLowerCase() === name.toLowerCase());\n        if (itemExists) {\n            setItems((prev)=>prev.filter((i)=>i.name.toLowerCase() !== name.toLowerCase()));\n        }\n        return itemExists;\n    };\n    const increaseQuantity = function(id) {\n        let amount = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;\n        setItems(items.map((item)=>item.id === id ? {\n                ...item,\n                quantity: item.quantity + amount\n            } : item));\n    };\n    const decreaseQuantity = function(id) {\n        let amount = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;\n        setItems(items.map((item)=>item.id === id ? {\n                ...item,\n                quantity: Math.max(1, item.quantity - amount)\n            } : item));\n    };\n    const toggleItem = (id)=>{\n        setItems((prev)=>prev.map((i)=>i.id === id ? {\n                    ...i,\n                    completed: !i.completed\n                } : i));\n    };\n    const clearList = ()=>setItems([]);\n    const groupedItems = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"useShoppingList.useMemo[groupedItems]\": ()=>items.reduce({\n                \"useShoppingList.useMemo[groupedItems]\": (groups, item)=>{\n                    const category = item.category || \"Other\";\n                    if (!groups[category]) groups[category] = [];\n                    groups[category].push(item);\n                    return groups;\n                }\n            }[\"useShoppingList.useMemo[groupedItems]\"], {})\n    }[\"useShoppingList.useMemo[groupedItems]\"], [\n        items\n    ]);\n    const totalCost = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"useShoppingList.useMemo[totalCost]\": ()=>items.reduce({\n                \"useShoppingList.useMemo[totalCost]\": (total, item)=>total + (item.price || 0) * item.quantity\n            }[\"useShoppingList.useMemo[totalCost]\"], 0)\n    }[\"useShoppingList.useMemo[totalCost]\"], [\n        items\n    ]);\n    return {\n        items,\n        addItem,\n        removeItemByName,\n        increaseQuantity,\n        decreaseQuantity,\n        toggleItem,\n        clearList,\n        groupedItems,\n        totalCost\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useShoppingList.ts\n"));

/***/ })

});